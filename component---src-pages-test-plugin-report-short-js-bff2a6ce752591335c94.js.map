{"version":3,"sources":["webpack:///./src/pages/testPluginReport/short.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_header__WEBPACK_IMPORTED_MODULE_3__","className","site","buildTime","replace","split","siteMetadata","revision","logStyles","reportExplanation","stack","allTestPluginShortReportJson","edges","map","node","stackFrequency","frequency","frames","elem","stackFrame","query","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_header_module_css__WEBPACK_IMPORTED_MODULE_2__","_header_module_css__WEBPACK_IMPORTED_MODULE_2___default","headerStyles","header","title","navigation","navigationLink","to","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"iMAOeA,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACbC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,MACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,yCAAgDH,EAAKM,KAAKC,UAAUC,QAAQ,IAAK,KAAKC,MAAM,KAAK,GAAjG,KACAR,EAAAC,EAAAC,cAAA,2CAAwCH,EAAKM,KAAKI,aAAaC,UAC/DV,EAAAC,EAAAC,cAAA,KAAGE,UAAWO,IAAUC,mBAAxB,qFAGAZ,EAAAC,EAAAC,cAAA,OAAKE,UAAWO,IAAUE,OACvBd,EAAKe,6BAA6BC,MAAMC,IAAI,SAACC,GAAD,OAC3CjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAWO,IAAUO,gBACrBD,EAAKA,KAAKE,UADb,MAC2BF,EAAKA,KAAKG,OAAO,IAE3CH,EAAKA,KAAKG,OAAOJ,IAAI,SAACK,GAAD,OACpBrB,EAAAC,EAAAC,cAAA,KAAGE,UAAWO,IAAUW,YAAaD,YAS5C,IAAME,EAAK,iCCjClB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAL,EAAAO,EAAAxC,EAAA,sBAAAuC,EAAAnC,IAAA6B,EAAA,KAY2BQ,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,uCCzDtB,IAAAC,EAAAf,EAAA,KAAAgB,EAAAhB,EAAA,GAAAiB,EAAAjB,EAAAE,EAAAc,GAAAE,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAAE,EAAAgB,GAKenD,EAAA,oBACbkD,EAAA9C,EAAAC,cAAA,OAAKE,UAAW8C,IAAaC,QAC3BJ,EAAA9C,EAAAC,cAAA,OAAKE,UAAW8C,IAAaE,OAA7B,2BACAL,EAAA9C,EAAAC,cAAA,OAAKE,UAAW8C,IAAaG,YAC3BN,EAAA9C,EAAAC,cAAC2C,EAAA,EAAD,CAAMzC,UAAW8C,IAAaI,eAAgBC,GAAG,KAAjD,SAGAR,EAAA9C,EAAAC,cAAC2C,EAAA,EAAD,CAAMzC,UAAW8C,IAAaI,eAAgBC,GAAG,UAAjD,8GCNAC,EAAmB,SAAA1D,GAAkB,IAAf2D,EAAe3D,EAAf2D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEpB,IAAMpC,cAAc4D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBU,UAAY,CAC3BT,SAAUjB,IAAU2B,MAAM,CACxBN,SAAUrB,IAAUE,OAAOC,aAC1BA,YAGUa","file":"component---src-pages-test-plugin-report-short-js-bff2a6ce752591335c94.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Header from '../../components/header';\n\nimport logStyles from '../log.module.css';\n\nexport default ({ data }) => (\n  <div>\n    <Header />\n    <div className=\"page\">\n      <h3>07 - test plugin - report</h3>\n      <p>Log last generated at: &emsp; &emsp; &emsp; {data.site.buildTime.replace('T', ' ').split('.')[0]} </p>\n      <p>On mozilla-central revision: &emsp; {data.site.siteMetadata.revision}</p>\n      <p className={logStyles.reportExplanation}>\n      This is a log capturing the non-crashing tests under /dom/plugins/test/mochitest.\n      </p>\n      <div className={logStyles.stack}>\n        {data.allTestPluginShortReportJson.edges.map((node) => (\n          <div>\n            <p className={logStyles.stackFrequency}>\n              {node.node.frequency} - {node.node.frames[0]}\n            </p>\n            {node.node.frames.map((elem) => (\n              <p className={logStyles.stackFrame}>{elem}</p>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nexport const query = graphql`\n  query {\n    site {\n      buildTime\n      siteMetadata {\n        revision\n      }\n    }\n    allTestPluginShortReportJson {\n      edges {\n        node {\n          frequency\n          frames\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport headerStyles from './header.module.css';\n\nexport default () => (\n  <div className={headerStyles.header}>\n    <div className={headerStyles.title}>Firefox win32k reports!</div>\n    <div className={headerStyles.navigation}>\n      <Link className={headerStyles.navigationLink} to=\"/\">\n        index\n      </Link>\n      <Link className={headerStyles.navigationLink} to=\"/about\">\n        about\n      </Link>\n    </div>\n  </div>\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}