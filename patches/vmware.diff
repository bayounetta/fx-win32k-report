# HG changeset patch
# User June Wilde <jewilde@mozilla.com>
# Date 1549580197 28800
#      Thu Feb 07 14:56:37 2019 -0800
# Node ID 80bacfe2877b9b7bbc96341f2c69cb01a6c1b9f9
# Parent  fc01e86f7e8032341f66c023abce37589dd801a0
Bug na - Enable vmware svga recognition

diff --git a/widget/GfxDriverInfo.cpp b/widget/GfxDriverInfo.cpp
--- a/widget/GfxDriverInfo.cpp
+++ b/widget/GfxDriverInfo.cpp
@@ -373,16 +373,17 @@ const nsAString& GfxDriverInfo::GetDevic
   switch (id) {
     DECLARE_VENDOR_ID(VendorAll, "");
     DECLARE_VENDOR_ID(VendorIntel, "0x8086");
     DECLARE_VENDOR_ID(VendorNVIDIA, "0x10de");
     DECLARE_VENDOR_ID(VendorAMD, "0x1022");
     DECLARE_VENDOR_ID(VendorATI, "0x1002");
     DECLARE_VENDOR_ID(VendorMicrosoft, "0x1414");
     DECLARE_VENDOR_ID(VendorParallels, "0x1ab8");
+    DECLARE_VENDOR_ID(VendorVMWare, "0x15ad");
     // Choose an arbitrary Qualcomm PCI VENdor ID for now.
     // TODO: This should be "QCOM" when Windows device ID parsing is reworked.
     DECLARE_VENDOR_ID(VendorQualcomm, "0x5143");
     // Suppress a warning.
     DECLARE_VENDOR_ID(DeviceVendorMax, "");
   }
 
   return *sDeviceVendors[id];
diff --git a/widget/GfxDriverInfo.h b/widget/GfxDriverInfo.h
--- a/widget/GfxDriverInfo.h
+++ b/widget/GfxDriverInfo.h
@@ -122,16 +122,17 @@ enum DeviceVendor {
   VendorAll,  // There is an assumption that this is the first enum
   VendorIntel,
   VendorNVIDIA,
   VendorAMD,
   VendorATI,
   VendorMicrosoft,
   VendorParallels,
   VendorQualcomm,
+  VendorVMWare,
   DeviceVendorMax
 };
 
 /* Array of devices to match, or an empty array for all devices */
 typedef nsTArray<nsString> GfxDeviceFamily;
 
 struct GfxDriverInfo {
   // If |ownDevices| is true, you are transferring ownership of the devices
diff --git a/widget/windows/GfxInfo.cpp b/widget/windows/GfxInfo.cpp
--- a/widget/windows/GfxInfo.cpp
+++ b/widget/windows/GfxInfo.cpp
@@ -1669,16 +1669,18 @@ nsresult GfxInfo::GetFeatureStatusImpl(
         !adapterVendorID.Equals(GfxDriverInfo::GetDeviceVendor(VendorATI),
                                 nsCaseInsensitiveStringComparator()) &&
         !adapterVendorID.Equals(GfxDriverInfo::GetDeviceVendor(VendorMicrosoft),
                                 nsCaseInsensitiveStringComparator()) &&
         !adapterVendorID.Equals(GfxDriverInfo::GetDeviceVendor(VendorParallels),
                                 nsCaseInsensitiveStringComparator()) &&
         !adapterVendorID.Equals(GfxDriverInfo::GetDeviceVendor(VendorQualcomm),
                                 nsCaseInsensitiveStringComparator()) &&
+        !adapterVendorID.Equals(GfxDriverInfo::GetDeviceVendor(VendorVMWare),
+                                nsCaseInsensitiveStringComparator()) &&
         // FIXME - these special hex values are currently used in xpcshell tests
         // introduced by bug 625160 patch 8/8. Maybe these tests need to be
         // adjusted now that we're only whitelisting intel/ati/nvidia.
         !adapterVendorID.LowerCaseEqualsLiteral("0xabcd") &&
         !adapterVendorID.LowerCaseEqualsLiteral("0xdcba") &&
         !adapterVendorID.LowerCaseEqualsLiteral("0xabab") &&
         !adapterVendorID.LowerCaseEqualsLiteral("0xdcdc")) {
       aFailureId = "FEATURE_FAILURE_UNKNOWN_DEVICE_VENDOR";
